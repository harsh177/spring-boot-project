server.port=8080

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://localhost:3306/test?useSSL=false
spring.datasource.username = root
spring.datasource.password = root


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
#Using update for spring.jpa.hibernate.ddl-auto property is fine for development. But, For production, You should keep the value of this property to validate, and use a database migration tool like Flyway for managing changes in the database schema
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql=true

#Flyway Properties
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.sql-migration-prefix=V
spring.flyway.sql-migration-suffix=.sql
spring.flyway.baseline-version=1
spring.flyway.validate-on-migrate=true
spring.flyway.clean-disabled=true
#If Connection is not given it will autometically use the existing one
#spring.flyway.url=jdbc:mysql://localhost:3306/test?useSSL=false
#spring.flyway.user=root
#spring.flyway.password=root

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=50MB
# Max Request Size
spring.servlet.multipart.max-request-size=75MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads